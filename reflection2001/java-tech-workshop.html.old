<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
    <link rel="stylesheet" href="common.css" type="text/css">
    <link rev="made" href="mailto:webmaster@openjit.org">
    <meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
    <meta http-equiv="Content-Style-Type" content="text/css">
    <title>The Java Technology Workshop</title>
    <style>
    </style>
  </head>

<body>

<p style="text-align: right">
<a href="http://www.openjit.org/reflection2001/" target="_top"><img src="ref2001.gif" alt="Reflection 2001 - The Third International Conference on Metalevel Architectures and Separation of Crosscutting Concerns - Kyoto, Japan, September 25-28, 2001" width="285" height="46"></a>
</p>

<p class="t2">The Java Technology Workshop</p>

<p class="t2">Sponsored by <a href="http://www.sun.co.jp/" target="_top">Sun Microsystems</a></p>

<p>
<p class="t3">(Held in conjunction with Reflection 2001, The 3rd International Conference on</div>
<div class="t3">Metalevel Architectures and Separation of Crosscutting Concerns)</div>
</p>

<p>
<div class="t3">Kyoto, Japan</div>
<div class="t3">25 September 2001</div>
</p>

<p class="t3">Workshop website: <a href="http://www.openjit.org/reflection2001/java-tech-workshop.html">http://www.openjit.org/reflection2001/java-tech-workshop.html</a></p>
<p class="t3">Conference website: <a href="http://www.openjit.org/reflection2001/" target="_top">http://www.openjit.org/reflection2001/</a></p>

<div style="margin-top: 2em">&nbsp;</div>

<h1 id="aim">Aim</h1>

<p>欧米と比較して、わが国においてはJavaに関する利用技術は進みつつあるものの、Javaテクノロジー、特にJavaシステム自身に対する貢献は少ない。これはOOPSLA, ECOOP, PLDIなど、主要な国際会議においてJavaが中心的な言語システムとなっているのにも関わらず、わが国からの論文が少ないことなどからも見て取れる。しかも、わが国が貢献した大学および研究所に存在するJavaテクノロジーはむしろ欧米において知名度が高く、わが国の企業におけるインパクトが様々な理由により少ないのが現状である。</p>

<p>そこで、今回京都リサーチパークで9月25-28日に開催されるReflection 2001国際会議(<a href="http://www.openjit.org/reflection2001/" target="_top">http://www.openjit.org/reflection2001/</a>)の併設ワークショップとして、9月25日にJavaテクノロジーワークショップと銘打ち、わが国が誇る、アカデミアで国際的に認知された一流のJavaテクノロジーに関する一連のシステム研究を紹介する講演会を催す。</p>

<!--<p>発表は日本語で、予稿集を出版する。</p>-->
<p>発表は日本語で行う。</p>

<p>なお、参加者はReflection2001の参加者は無料、それ以外は一般1万円、学生5千円の参加費を徴収する。参加者は最大150名である。</p>

<h1 id="oc">Workshop Organizers</h1>

<ul>
<li>千葉 滋 (東工大)
<li>一杉 裕志 (産業技術総合研究所)
<li>増原 英彦 (東京大学)
<li>松岡 聡 (東工大)
<!--<li>中田 秀基 (産業技術総合研究所/東工大)-->
<!--<li>首藤 一幸 (産業技術総合研究所)-->
<li>高木 浩光 (産業技術総合研究所)
<!--<li>John Whaley (Stanford大学)-->
<li>湯浅 太一 (京都大学)
<li>他数名
</ul>

<h1>Session 1: 先進的Java セキュリティ (10:30-11:30)</h1>

<h2>Javaにおけるセキュリティとその問題点</h2>
<p><b>高木 浩光 (産業技術総合研究所)</b></p>


<h2>Javaにおけるセキュアな実行系</h2>
<p><b>後藤 礼史，田浦 健次朗 (東京大学)</b></p>
<p>本研究では，機能拡張可能なアプリケーションを安全に効率良く実行できる枠組の提案と実装を行う．機能拡張可能なアプリケーションは，必要になった時点で機能拡張できる点が優れているが，誰でも拡張機能を作成できるために安全面で問題がある．そこで，拡張コードに一定の自由度を与えながら最低限の安全性を保証する枠組が求められる．</p>

<p>我々は，Secure Shared Memory (SSM)と呼ぶモデルを提案する．SSMは，実行時ユーザとコード作成者に相当する二つの概念を用いて，読み，書き，実行の3種類のアクセス権限を動的に制御する．また，実行時ユーザ切り替えや動的な権限の変更に対応し，柔軟な制御を可能にする．SSMは現在Java上に実装されている．アプリケーションの実行時間は10〜50倍に増加するが，関数内エスケープ解析などにより，良いものでは2倍前後まで減少する．今後は，関数間エスケープ解析などの導入によりさらにオーバーヘッドを削減できる見込みである．</p>

<h1>Session 2: Java 言語技術およびリフレクション (13:00-14:30)</h1>

<h2>Java言語ソースコード処理フレームワークEPPとMixJuice言語</h2>
<p><b>一杉 裕志 (産業技術総合研究所)</b></p>
<p>EPP (Extensible Java Pre-Processor)は，Java言語の言語拡張や，Java言語で書かれたソースコードの解析・変換処理をするための強力なフレームワークである．今回の発表では，(1)EPP 1.1の応用事例，(2)実用性を大幅に向上させるEPP 2.0の構想，(3)EPP 2.0の実装用言語であり，ソフトウエアの拡張性・再利用性を大幅に高める「差分ベースモジュール機構」を有するMixJuice言語，の3つについて述べる．</p>

<h2>Javaと他言語とのインターフェイス技術</h2>
<p><b>湯淺 太一 (京都大学)</b></p>
<p>Javaの持つ諸機能を，対話型プログラミング環境に取り込むための試みとして，「ぶぶ」と呼ぶScheme処理系を開発中である．この処理系では，単にJavaのクラスライブラリをロードしてインスタンスを生成したりメソッドを呼び出したりできるだけでなく，SchemeレベルでJavaクラスを拡張(サブクラスを定義)できるなど，Javaとの「シームレス」なインターフェイスを提供している．処理系開発の過程で培われたインターフェイス実装技術を紹介する．</p>

<h2>Javaにおける先進的リフレクション技術OpenJava, Javassist</h2>
<p><b>立堀道昭 (筑波大)，千葉 滋 (東工大)</b></p>

<p>我々がJava向けに開発してきた，構造リフレクションの技術を紹介する．実際のソフトウェア開発の場では，しばしばプログラムを変えたりコードを追加することが必要になる．機能の変更・追加のためにプログラマが額に汗して行なっていた変更を，構造リフレクションはメタプログラムにしたがって半自動的に行なう．これにより，ソフトウェアの生産性や保守性の向上を図れる．我々は，このような構造リフレクションを Java に導入したシステム，OpenJavaとJavassistを開発してきた．これらのシステムの特徴と，実際の応用例を紹介する．</p>

<h1 style="page-break-before: always">Session 3: Javaの高度な言語実装技術 (14:45-15:45)</h1>

<h2>JavaでのOpen Just-In-Timeコンパイラ技術OpenJIT</h2>
<p><b>小川 宏高，松岡 聡 (東工大)</b></p>
<p>Open Compilerは，自己反映計算をベースとして，コンパイラにさまざまな言語拡張や最適化の為のモジュールを組み込む技術である．我々は，Java言語のJust-In-TimeコンパイラにOpen Compilerの技術を適用し，クラス単位での最適化のためのカスタマイゼーションを可能にしたOpenJITを開発している．OpenJITは，アプリケーションや計算環境に特化した動的な言語機能の拡張や最適化が可能であり，新たなコンパイル技術の研究基盤としての役目を果たす．</p>

<h2>Javaでの高速部分計算技術</h2>
<p><b>増原 英彦 (東京大学)</b></p>
<p>部分計算とは，プログラムに部分的な入力を与えて実行し，より高速な(特化された)プログラム生成する技術である．本発表では，Javaバイトコードを対象として，実行時に高速に部分計算を行うBCS (ByteCode Specialization)システムを紹介する．このシステムでは部分計算を行うプログラムを予め生成しておき，そのプログラムが実行時に特化されたバイトコード列を生成する．これによって既存のJITコンパイラの援用が可能になり，高速かつ移植性の高い部分計算が実現されている．</p>

<h1>Session 4: Javaでの先進的分散実行技術 (16:00-17:00)</h1>

<h2>Javaにおける分散共有メモリ技術</h2>
<p><b>早田 恭彦 (東工大)，中田 秀基 (産業技術総合研究所/東工大)</b></p>
<p>Javaの持つポータビリティを損なわないPureJavaなソフトウェア分散共有メモリのデザインについて，Javaの特性やメモリ管理・プログラミングモデル・性能などの側面から述べる．さらに，このデザインに基づいてポータブルなJavaソフトウェア分散共有メモリシステムJDSMを実装し，異なるOS上において数値計算アプリケーションを用いて評価した結果についても述べる．</p>

<h2>JavaにおけるAgent技術</h2>
<p><b>佐藤 一郎 (国立情報学研究所)</b></p>
<p>エージェントは自律的に動作するソフトウェアであり，知識処理やユーザ補助，シュミレーション技術などの幅広い応用をもっている．一方，Java言語はエージェント実装において有望なだけでなく，モバイルエージェントなどの新しいエージェント技術の原動力となっており，ここではJava言語によるエージェントシステムを紹介するとともに，今後の研究動向について概説する．</p>

<h1 id="program">Advance Program (仮)、一部交渉中</h1>

<h2>先進的Java セキュリティ</h2>

<dl>
<dt>Javaにおけるセキュリティとその問題点
<dd>高木 浩光 (産業技術総合研究所)
<dd>概要: 
<dt>Javaにおけるセキュアな実行系
<dd>後藤 礼史，田浦 健次朗 (東京大学)
<dd>概要: 本研究では、機能拡張可能なアプリケーションを安全に効率良く実行できる枠組の提案と実装を行う。機能拡張可能なアプリケーションは、必要になった時点で機能拡張できる点が優れているが、誰でも拡張機能を作成できるために安全面で問題がある。そこで、拡張コードに一定の自由度を与えながら最低限の安全性を保証する枠組が求められる。<p>

我々は、Secure Shared Memory (SSM)と呼ぶモデルを提案する。SSMは、実行時ユーザとコード作成者に相当する二つの概念を用いて、読み、書き、実行の3種類のアクセス権限を動的に制御する。また、実行時ユーザ切り替えや動的な権限の変更に対応し、柔軟な制御を可能にする。SSMは現在Java上に実装されている。アプリケーションの実行時間は10〜50倍に増加するが、関数内エスケープ解析などにより、良いものでは2倍前後まで減少する。今後は、関数間エスケープ解析などの導入によりさらにオーバーヘッドを削減できる見込みである。

</dl>

<h2>Java 言語技術およびリフレクション</h2>

<dl>
<dt>Java言語ソースコード処理フレームワークEPPとMixJuice言語
<dd>一杉 裕志 (産業技術総合研究所)
<dd>概要: EPP (Extensible Java Pre-Processor)は、Java言語の言語拡張や、Java言語で書かれたソースコードの解析・変換処理をするための強力なフレームワークである。今回の発表では、(1)EPP 1.1の応用事例、(2)実用性を大幅に向上させるEPP 2.0の構想、(3)EPP 2.0の実装用言語であり、ソフトウエアの拡張性・再利用性を大幅に高める「差分ベースモジュール機構」を有するMixJuice言語、の3つについて述べる。

<dt>Javaと他言語とのインターフェイス技術
<dd>湯淺 太一 (京都大学)
<dd>概要: Javaの持つ諸機能を，対話型プログラミング環境に取り込むための試みとして，「ぶぶ」と呼ぶScheme処理系を開発中である．この処理系では，単にJavaのクラスライブラリをロードしてインスタンスを生成したりメソッドを呼び出したりできるだけでなく，SchemeレベルでJavaクラスを拡張(サブクラスを定義)できるなど，Javaとの「シームレス」なインターフェイスを提供している．処理系開発の過程で培われたインターフェイス実装技術を紹介する．

<dt>Javaにおける先進的リフレクション技術OpenJava, Javassist
<dd>立堀道昭 (筑波大)，千葉 滋 (東工大)
<dd>概要: 我々がJava向けに開発してきた、構造リフレクションの技術を紹介する。実際のソフトウェア開発の場では、しばしばプログラムを変えたりコードを追加することが必要になる。機能の変更・追加のためにプログラマが額に汗して行なっていた変更を、構造リフレクションはメタプログラムにしたがって半自動的に行なう。これにより、ソフトウェアの生産性や保守性の向上を図れる。我々は、このような構造リフレクションを Java に導入したシステム、OpenJavaとJavassistを開発してきた。これらのシステムの特徴と、実際の応用例を紹介する。

</dl>

<h2>Javaの高度な言語実装技術</h2>

<dl>
<!--
<dt>Javaでのメソッドの部分コンパイル技術
<dd>John Whaley (Stanford大学)
-->
<dt>JavaでのOpen Just-In-Timeコンパイラ技術OpenJIT
<dd>小川 宏高，松岡 聡 (東工大)
<dd>概要: Open Compilerは，自己反映計算をベースとして，コンパイラにさまざまな言語拡張や最適化の為のモジュールを組み込む技術である．我々は，Java言語のJust-In-TimeコンパイラにOpen Compilerの技術を適用し，クラス単位での最適化のためのカスタマイゼーションを可能にしたOpenJITを開発している．OpenJITは，アプリケーションや計算環境に特化した動的な言語機能の拡張や最適化が可能であり，新たなコンパイル技術の研究基盤としての役目を果たす．

<dt>Javaでの高速部分計算技術
<dd>増原 英彦 (東京大学)
<dd>概要: 部分計算とは、プログラムに部分的な入力を与えて実行し、より高速な(特化された)プログラム生成する技術である。本発表では、Javaバイトコードを対象として、実行時に高速に部分計算を行うBCS (ByteCode Specialization)システムを紹介する。このシステムでは部分計算を行うプログラムを予め生成しておき、そのプログラムが実行時に特化されたバイトコード列を生成する。これによって既存のJITコンパイラの援用が可能になり、高速かつ移植性の高い部分計算が実現されている。

</dl>

<h2>Javaでの先進的分散実行技術</h2>

<dl>
<!--
<dt>Javaにおけるスレッド移送技術と分散オブジェクト [交渉中]
<dd>首藤 一幸 (産業技術総合研究所)
-->
<dt>Javaにおける分散共有メモリ技術
<dd>早田 恭彦 (東工大)，中田 秀基 (産業技術総合研究所/東工大)
<dd>概要: Javaの持つポータビリティを損なわないPureJavaなソフトウェア分散共有メモリのデザインについて、Javaの特性やメモリ管理・プログラミングモデル・性能などの側面から述べる。さらに、このデザインに基づいてポータブルなJavaソフトウェア分散共有メモリシステムJDSMを実装し、異なるOS上において数値計算アプリケーションを用いて評価した結果についても述べる。

<dt>JavaにおけるAgent技術
<dd>佐藤 一郎 (国立情報学研究所)
<dd>概要: エージェントは自律的に動作するソフトウェアであり、知識処理やユーザ補助、シュミレーション技術などの幅広い応用をもっている。一方、Java言語はエージェント実装において有望なだけでなく、モバイルエージェントなどの新しいエージェント技術の原動力となっており、ここではJava言語によるエージェントシステムを紹介するとともに、今後の研究動向について概説する。

</dl>

<div style="margin-top: 2em">&nbsp;</div>

</body>
</html>
